"""检测模型变更

Revision ID: b6edfe31b48a
Revises: 4b5bc4d5b171
Create Date: 2025-08-12 10:38:28.982356

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b6edfe31b48a'
down_revision = '4b5bc4d5b171'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('project',
    sa.Column('id', sa.Integer(), nullable=False, comment='主键ID'),
    sa.Column('name', sa.String(length=100), nullable=False, comment='项目名称'),
    sa.Column('description', sa.Text(), nullable=True, comment='项目描述'),
    sa.Column('status', sa.String(length=20), nullable=False, comment='项目状态: active(活跃), archived(已归档)'),
    sa.Column('color', sa.String(length=7), nullable=False, comment='项目颜色标识（hex）'),
    sa.Column('creator_id', sa.Integer(), nullable=False, comment='创建者用户ID'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.PrimaryKeyConstraint('id'),
    comment='项目表，存储协作项目的基本信息'
    )
    with op.batch_alter_table('project', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_project_id'), ['id'], unique=False)

    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False, comment='主键ID'),
    sa.Column('email', sa.String(length=100), nullable=True, comment='邮箱（可空）'),
    sa.Column('name', sa.String(length=50), nullable=True, comment='姓名'),
    sa.Column('phone', sa.String(length=20), nullable=True, comment='手机号'),
    sa.Column('role', sa.String(length=20), server_default='普通用户', nullable=False, comment='角色: 普通用户|管理员'),
    sa.Column('openid', sa.String(length=64), nullable=True, comment='微信openid'),
    sa.Column('avatar', sa.String(length=500), nullable=True, comment='头像URL'),
    sa.Column('status', sa.String(length=20), server_default='未审核', nullable=False, comment='用户状态: pending(未审核), active(已通过), inactive(已拒绝)'),
    sa.Column('hire_date', sa.DateTime(), nullable=True, comment='入职日期'),
    sa.Column('contract_expiry', sa.DateTime(), nullable=True, comment='合同到期日期'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.PrimaryKeyConstraint('id'),
    comment='用户表，存储系统用户的基本信息和微信相关信息'
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_openid'), ['openid'], unique=True)

    op.create_table('document',
    sa.Column('id', sa.Integer(), nullable=False, comment='主键ID'),
    sa.Column('title', sa.String(length=200), nullable=False, comment='文档标题'),
    sa.Column('content', sa.Text(), nullable=False, comment='文档内容(Markdown)'),
    sa.Column('project_id', sa.Integer(), nullable=True, comment='所属项目ID，为空表示不属于任何项目'),
    sa.Column('specific_user_ids', sa.JSON(), nullable=True, comment='指定可见用户ID列表，为空表示所有用户可见'),
    sa.Column('author_id', sa.Integer(), nullable=False, comment='作者用户ID'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='文档表，记录用户创建的文档及可见性'
    )
    with op.batch_alter_table('document', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_document_id'), ['id'], unique=False)

    op.create_table('project_membership',
    sa.Column('id', sa.Integer(), nullable=False, comment='主键ID'),
    sa.Column('project_id', sa.Integer(), nullable=False, comment='项目ID'),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='用户ID'),
    sa.Column('role', sa.String(length=20), nullable=False, comment='成员角色: owner(所有者), admin(管理员), member(成员)'),
    sa.Column('joined_at', sa.DateTime(), nullable=True, comment='加入时间'),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='项目成员表，记录用户在项目中的角色和加入时间'
    )
    with op.batch_alter_table('project_membership', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_project_membership_id'), ['id'], unique=False)

    op.create_table('task',
    sa.Column('id', sa.Integer(), nullable=False, comment='主键ID'),
    sa.Column('title', sa.String(length=200), nullable=False, comment='任务标题'),
    sa.Column('description', sa.Text(), nullable=True, comment='任务描述'),
    sa.Column('status', sa.Enum('TODO', 'IN_PROGRESS', 'DONE', name='taskstatus'), nullable=False, comment='任务状态: todo(待办), in_progress(进行中), done(已完成)'),
    sa.Column('visibility', sa.Enum('PUBLIC', 'PROJECT', 'PRIVATE', name='taskvisibility'), nullable=False, comment='可见性级别: public(公开), project(项目内), private(私有)'),
    sa.Column('priority', sa.String(length=20), nullable=False, comment='优先级: low, medium, high, urgent'),
    sa.Column('estimated_hours', sa.Integer(), nullable=True, comment='估算工时(小时)'),
    sa.Column('project_id', sa.Integer(), nullable=True, comment='所属项目ID(公开任务可能没有项目)'),
    sa.Column('parent_task_id', sa.Integer(), nullable=True, comment='父任务ID(子任务)'),
    sa.Column('creator_id', sa.Integer(), nullable=False, comment='创建者用户ID'),
    sa.Column('assignee_id', sa.Integer(), nullable=True, comment='被分配人用户ID'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.Column('due_date', sa.DateTime(), nullable=True, comment='截止日期'),
    sa.Column('completed_at', sa.DateTime(), nullable=True, comment='完成时间'),
    sa.ForeignKeyConstraint(['assignee_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['parent_task_id'], ['task.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='任务表，记录项目任务、分配、状态等信息'
    )
    with op.batch_alter_table('task', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_task_id'), ['id'], unique=False)

    op.create_table('comment',
    sa.Column('id', sa.Integer(), nullable=False, comment='主键ID'),
    sa.Column('content', sa.Text(), nullable=False, comment='评论内容(Markdown格式)'),
    sa.Column('author_id', sa.Integer(), nullable=False, comment='作者用户ID'),
    sa.Column('task_id', sa.Integer(), nullable=True, comment='关联任务ID'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='评论表，记录任务和日志的评论内容及关联关系'
    )
    with op.batch_alter_table('comment', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_comment_id'), ['id'], unique=False)

    op.create_table('document_comment',
    sa.Column('id', sa.Integer(), nullable=False, comment='主键ID'),
    sa.Column('content', sa.Text(), nullable=False, comment='评论内容(Markdown)'),
    sa.Column('document_id', sa.Integer(), nullable=False, comment='文档ID'),
    sa.Column('author_id', sa.Integer(), nullable=False, comment='作者用户ID'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='创建时间'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='更新时间'),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ),
    sa.PrimaryKeyConstraint('id'),
    comment='文档评论表（独立于通用评论），关联 document'
    )
    with op.batch_alter_table('document_comment', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_document_comment_document_id'), ['document_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_document_comment_id'), ['id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('document_comment', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_document_comment_id'))
        batch_op.drop_index(batch_op.f('ix_document_comment_document_id'))

    op.drop_table('document_comment')
    with op.batch_alter_table('comment', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_comment_id'))

    op.drop_table('comment')
    with op.batch_alter_table('task', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_task_id'))

    op.drop_table('task')
    with op.batch_alter_table('project_membership', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_project_membership_id'))

    op.drop_table('project_membership')
    with op.batch_alter_table('document', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_document_id'))

    op.drop_table('document')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_openid'))
        batch_op.drop_index(batch_op.f('ix_user_id'))
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    with op.batch_alter_table('project', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_project_id'))

    op.drop_table('project')
    # ### end Alembic commands ###
